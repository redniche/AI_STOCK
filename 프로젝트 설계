읽는법 
상위모듈(종속성이 존재하는 다른모듈)%입력값%{내부모듈들, 마지막엔 return 결과} 
[]:공유자원
들여쓰기 적용.
종속성이 존재한다는 것은 간단하게 말하면 예외의 상황을 처리해야 함을 의미.
데이터베이스라는 언급이 없으면 반환값은 메모리에 저장된다는 것을 의미.

주식투자 소프트웨어
만들어야할 모듈과 필요자원

AI_STOCK{
	주식조회(키움증권api){
		return [주식이름, 주식장, 기간별가격 등] 데이터베이스 저장
	}
	주식분석(주식조회)%주식이름%{
		주식감정크롤링(){
			return 주식 기사or게시글 등의 게시일, 제목, 본문, 댓글, 조회수 등을 크롤링 후 반환
		}
		주식빅데이터트랜드(네이버api, 구글api){
			return 주식의 연관 키워드를 검색, 기간별 절대 수치를 반환(상대수치를 변환해야함)
		}
		return [주식 감정 정보], [주식 트랜드 정보] 데이터베이스 저장
	}
	주식예측(주식조회, 주식분석)%주식이름%{
		미래예측곱신경망(){
			감정변화시계열신경망(){return [주식 감정 정보]를 기반으로 신경망학습. 과거가격을통해오차전파}
			빅데이터트랜드신경망(){return [주식 트랜드 정보]를 기반으로 신경망학습. 과거가격을통해오차전파}
			주식데이터시계열신경망(){return [주식 이름, 주식장, 기간별가격 등]를 기반으로 신경망학습. 과거가격을통해오차전파}
			//주의 하위에 주식별로 여러 신경망을 두어 최종 신경망을 만들 가능성이 높음
			return [최종 신경망]을 직렬화 또는 데이터베이스(저장비용고려)에 저장.
		}
		return [최종 신경망]을 통해 기간별 미래가격 예측, 성장가능성, 확률, 손익절충점 계산 후 반환.
	}
	주식주문결정(키움증권api, 주식조회, 주식예측){return 이익이 예상되면 주문}
	주식판매결정(키움증권api, 주식조회, 주식예측){return 손익절충점 이상이면 판매}
	메인모듈(){
		return 시간별 이벤트 발생 실행 또는 사용자 입력 실행
	}
	
}
	